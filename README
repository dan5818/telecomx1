# üì° Telecom X ‚Äî Churn de Clientes  
**De datos ‚Üí insights ‚Üí acciones de retenci√≥n** ‚ú®

![Python](https://img.shields.io/badge/Python-3.10+-blue)
![Pandas](https://img.shields.io/badge/Pandas-DataFrames-150458)
![Matplotlib](https://img.shields.io/badge/Matplotlib-Gr√°ficos-11557c)
![Scikit--learn](https://img.shields.io/badge/Scikit--learn-ML-orange)
![Status](https://img.shields.io/badge/Estado-Listo%20para%20EDA-green)

> Proyecto did√°ctico y pr√°ctico para analizar la **evasi√≥n (churn)** en una telco.  
> Extraemos datos desde una API/JSON, ejecutamos un ETL reproducible, auditamos calidad y realizamos un EDA enfocado en **segmentos de riesgo**.

---

## üß≠ Tabla de contenidos
- [Objetivo](#-objetivo)
- [Qu√© aprender√°s](#-qu√©-aprender√°s)
- [Estructura](#-estructura)
- [Datos](#-datos)
- [Inicio r√°pido](#-inicio-r√°pido)
- [Flujo de trabajo](#-flujo-de-trabajo)
- [Visualizaciones y entregables](#-visualizaciones-y-entregables)
- [Hallazgos esperados](#-hallazgos-esperados)
- [Siguientes pasos (ML)](#-siguientes-pasos-ml)
- [Tecnolog√≠as](#-tecnolog√≠as)
- [Contribuir](#-contribuir)
- [Cr√©ditos](#-cr√©ditos)

---

## üéØ Objetivo
**Reducir la tasa de cancelaci√≥n** identificando patrones y variables clave (contrato, m√©todo de pago, cargos, antig√ºedad) para **priorizar acciones de retenci√≥n** y dejar el dataset **listo para modelado**.

---

## üß™ Qu√© aprender√°s
- Ingesta desde **API/JSON** directo a Pandas.
- Construcci√≥n de un **pipeline ETL** reproducible (Extracci√≥n ‚Üí Transformaci√≥n ‚Üí Carga).
- **Auditor√≠a de calidad** (NA, duplicados, rangos, dominios categ√≥ricos).
- **EDA estrat√©gico** con visualizaciones claras y comunicaci√≥n de **insights**.
- Base para **modelos de churn** (features, m√©tricas y validaci√≥n).

---

## üóÇ Estructura
telecomx-churn/
‚îú‚îÄ‚îÄ data/
‚îÇ ‚îú‚îÄ‚îÄ raw/ # Datos crudos (API o simulados)
‚îÇ ‚îî‚îÄ‚îÄ processed/ # Datos limpios/listos
‚îú‚îÄ‚îÄ reports/
‚îÇ ‚îú‚îÄ‚îÄ figures/ # Im√°genes del EDA
‚îÇ ‚îî‚îÄ‚îÄ eda_summary.md # Resumen de hallazgos
‚îú‚îÄ‚îÄ src/
‚îÇ ‚îú‚îÄ‚îÄ etl.py # Extracci√≥n/limpieza/feature engineering
‚îÇ ‚îú‚îÄ‚îÄ eda.py # Visualizaciones y m√©tricas de churn
‚îÇ ‚îî‚îÄ‚îÄ simulate_data.py # Generador de datos demo (si no hay API)
‚îú‚îÄ‚îÄ requirements.txt
‚îî‚îÄ‚îÄ README.md


---

## üì¶ Datos
- **Origen:** JSON accesible por URL (formato tipo Telco: `customer`, `phone`, `internet`, `account`).
- **Objetivo:** `Churn` con valores `Yes/No` ‚Üí se convierte a binaria **`Evasion` (1/0)**.
- **Anidados:** Algunas columnas vienen como diccionarios y se **normalizan** (desanidan) para el an√°lisis.
- **Feature de negocio incluida:** `Costo_Diario = Charges.Monthly / 30`.

> Si no tienes conectividad, usa `src/simulate_data.py` para generar un dataset de ejemplo en `data/raw/`.

---

## üöÄ Inicio r√°pido

### Opci√≥n A ‚Äî Google Colab
1. Abre un cuaderno y monta tu repo/proyecto.  
2. Instala dependencias:
   ```bash
   pip install -r requirements.txt


Extrae desde API (opcional, define la URL RAW del JSON):

import os
os.environ["TELECOMX_API_URL"] = "https://raw.githubusercontent.com/<user>/<repo>/main/TelecomX_Data.json"
!python src/etl.py --from-api


Ejecuta el EDA:

python src/eda.py

Opci√≥n B ‚Äî Local (VS Code / Jupyter)
python -m venv .venv
source .venv/bin/activate         # Windows: .venv\Scripts\activate
pip install -r requirements.txt
python src/etl.py                 # o python src/etl.py --from-api
python src/eda.py

üîÅ Flujo de trabajo

FASE 1 ‚Äî Extracci√≥n

Carga de JSON ‚Üí DataFrame, exploraci√≥n de columnas y tipos.

FASE 2 ‚Äî Transformaci√≥n

Limpieza de Churn (eliminar vac√≠os) ‚Üí binaria Evasion.

Derivadas: Costo_Diario = Charges.Monthly / 30.

Normalizaci√≥n de campos anidados (Cliente, Servicio_Internet, Cuenta).

Renombrado de columnas a espa√±ol para lectura clara.

FASE 3 ‚Äî Calidad de datos

Revisi√≥n de NA, duplicados, tipos/rangos y dominios.

Recomendaciones: imputaci√≥n documentada, estandarizaci√≥n de Yes/No, l√≠mites de tenure, cargos ‚â• 0, etc.

FASE 4 ‚Äî EDA

Balance de Evasion.

Evasi√≥n por Contrato, M√©todo de pago, G√©nero.

Distribuciones de Antig√ºedad (tenure), Cargos Mensuales, Cargos Totales.

(Opcional) Correlaciones num√©ricas.

üìä Visualizaciones y entregables

Barras: distribuci√≥n global de Evasion (qui√©n se queda vs. qui√©n se va).

Barras apiladas: churn por Contrato, M√©todo de pago, G√©nero.

KDE/Histogramas: comparaci√≥n de tenure, Charges.Monthly, Charges.Total por grupo.

Carpeta reports/figures/ con im√°genes exportadas.

Resumen reports/eda_summary.md con los insights clave.

üîé Hallazgos esperados

(Patrones frecuentes en telco que este an√°lisis ayuda a confirmar/concretar):

Mayor churn en Month-to-month vs. One/Two year.

Electronic check suele concentrar m√°s bajas que cobros autom√°ticos.

Tenure bajo y cargos mensuales altos se asocian a mayor riesgo.

Servicios como TechSupport / OnlineSecurity correlacionan con menor evasi√≥n.

üß† Siguientes pasos (ML)

Encoding de categ√≥ricas + escalado de num√©ricas.

Modelos base: Regresi√≥n log√≠stica, √Årboles, Gradient Boosting.

M√©tricas: ROC-AUC, PR-AUC, Lift, calibraci√≥n.

Validaci√≥n temporal si hay fechas de alta/cancelaci√≥n.

Generaci√≥n de listas de alto riesgo para campa√±as de retenci√≥n.

üõ† Tecnolog√≠as

Python 3.10+

Pandas, NumPy

Matplotlib (y/o Seaborn en notebooks)

Scikit-learn (fase ML)

Requests/JSON (ingesta desde API)
